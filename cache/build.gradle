apply plugin: 'com.android.library'
/**
 * 定义显示的版本号
 * 统一打包版本号和上传到maven上的版本号
 */
def versionStr="0.0.3-SNAPSHOT"
android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"


    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName versionStr

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'

    compileOnly 'com.google.code.gson:gson:2.8.5'
    compileOnly 'com.blankj:utilcodex:1.25.9'
    compileOnly 'com.orhanobut:logger:2.2.0'
}

apply plugin: 'maven'
def groupIdStr = 'com.ymdt'
def artifactIdStr = 'cache'
def des='cache文件缓存,适配Android Q'
uploadArchives{
    repositories {
        mavenDeployer{
            /**
             * 仓库地址，暂时发布到snapshot上，等完善后再发布到正式版库中
             */
            repository(url:"http://47.99.217.9:8081/repository/ymdt-snapshot"){
                /**
                 * 仓库用户名及其密码
                 */
                authentication(userName: 'niu', password: 'sjsw123456')
            }
            /**
             * 库信息
             */
            pom.project {
                /**
                 * 库类型
                 * 纯java->jar
                 * 包含资源文件的android->aar
                 */
                packaging 'aar'
                /**
                 * 组名称，依赖定位使用
                 * 通常为com.公司名称.项目名
                 */
                groupId groupIdStr
                /**
                 * 库名称，通常是该库的名称
                 */
                artifactId artifactIdStr
                /**
                 * 版本号，每次有修改时需要修改该版本号
                 * 同时使用该依赖库的项目也需要修改
                 */
                version versionStr
                /**
                 * 功能描述，或更新描述
                 */
                description des
            }
        }
    }
}
